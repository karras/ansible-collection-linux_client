---

# 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
- name: 1.1.1.1 test disabled cramfs filesystem module
  ansible.builtin.command:
    modprobe -n -v cramfs
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
- name: 1.1.1.1 test removed loaded cramfs filesystem module
  ansible.builtin.command:
    lsmod | grep cramfs
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
- name: 1.1.1.2 test disabled freevxfs filesystem module
  ansible.builtin.command:
    modprobe -n -v freevxfs
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
- name: 1.1.1.2 test removed loaded freevxfs filesystem module
  ansible.builtin.command:
    lsmod | grep freevxfs
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Scored)
- name: 1.1.1.3 test disabled jffs2 filesystem module
  ansible.builtin.command:
    modprobe -n -v jffs2
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.3 Ensure mounting of freevxfs filesystems is disabled (Scored)
- name: 1.1.1.3 test removed loaded jffs2 filesystem module
  ansible.builtin.command:
    lsmod | grep jffs2
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
- name: 1.1.1.4 test disabled hfs filesystem module
  ansible.builtin.command:
    modprobe -n -v hfs
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
- name: 1.1.1.4 test removed loaded hfs filesystem module
  ansible.builtin.command:
    lsmod | grep hfs
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
- name: 1.1.1.5 test disabled hfsplus filesystem module
  ansible.builtin.command:
    modprobe -n -v hfsplus
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
- name: 1.1.1.5 test removed loaded hfsplus filesystem module
  ansible.builtin.command:
    lsmod | grep hfsplus
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.1.6 Ensure mounting of squashfs filesystems is disabled (Scored)
- name: 1.1.1.6 test disabled squashfs filesystem module
  ansible.builtin.command:
    modprobe -n -v squashfs
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.6 Ensure mounting of squashfs filesystems is disabled (Scored)
- name: 1.1.1.6 test removed loaded squashfs filesystem module
  ansible.builtin.command:
    lsmod | grep squashfs
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.1.7 Ensure mounting of udf filesystems is disabled (Scored)
- name: 1.1.1.7 test disabled udf filesystem module
  ansible.builtin.command:
    modprobe -n -v udf
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.7 Ensure mounting of udf filesystems is disabled (Scored)
- name: 1.1.1.7 test removed loaded udf filesystem module
  ansible.builtin.command:
    lsmod | grep udf
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.1.8 Ensure mounting of vfat filesystems is disabled (Scored)
- name: 1.1.1.8 test disabled vfat filesystem module
  ansible.builtin.command:
    modprobe -n -v vfat
  register: out
  changed_when: no
  failed_when:
    - '"install /bin/true" not in out.stdout'

# 1.1.1.8 Ensure mounting of vfat filesystems is disabled (Scored)
- name: 1.1.1.8 test removed loaded vfat filesystem module
  ansible.builtin.command:
    lsmod | grep vfat
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0

# 1.1.2 Ensure /tmp is configured (Scored)
- name: 1.1.2 test separate mount point for /tmp
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/tmp\s'
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length < 1

# 1.1.2 Ensure /tmp is configured (Scored)
- name: 1.1.2 test if /etc/fstab exists
  stat:
    path: /etc/fstab
  register: fstab

# 1.1.2 Ensure /tmp is configured (Scored)
- name: 1.1.2 test if /tmp is configured via /etc/fstab
  ansible.builtin.shell:
    cmd: grep -E '\s/tmp\s' /etc/fstab | grep -E -v '^\s*#'
  register: out_fstab
  changed_when: no
  failed_when: no
  when:
    - fstab.stat.exists | bool

# 1.1.2 Ensure /tmp is configured (Scored)
- name: 1.1.2 test if /tmp is configured via tmp.mount
  ansible.builtin.command:
    systemctl is-enabled tmp.mount
  register: out_systemctl
  changed_when: no
  failed_when: no

# 1.1.2 Ensure /tmp is configured (Scored)
- name: 1.1.2 test if /tmp is either configured via /etc/fstab or tmp.mount
  ansible.builtin.assert:
    that:
      - (out_fstab.stdout_lines | length > 0) or
        (out_systemctl.stdout in ["enabled", "static"])

# 1.1.3 Ensure nodev option set on /tmp partition (Scored)
- name: 1.1.3 test enabled nodev option for /tmp mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/tmp\s' | grep -v nodev
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.4 Ensure nosuid option set on /tmp partition (Scored)
- name: 1.1.4 test enabled nosuid option for /tmp mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/tmp\s' | grep -v nosuid
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.5 Ensure noexec option set on /tmp partition (Scored)
- name: 1.1.5 test enabled noexec option for /tmp mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/tmp\s' | grep -v noexec
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.6 Ensure separate partition exists for /var (Scored)
- name: 1.1.6 test separate mount point for /var
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/var\s'
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length < 1
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.7 Ensure separate partition exists for /var/tmp (Scored)
- name: 1.1.7 test separate mount point for /var/tmp
  ansible.builtin.shell:
    cmd: mount | grep /var/tmp
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length < 1
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.8 Ensure nodev option set on /var/tmp partition (Scored)
- name: 1.1.8 test enabled nodev option for /var/tmp mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/var/tmp\s' | grep -v nodev
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.9 Ensure nosuid option set on /var/tmp partition (Scored)
- name: 1.1.9 test enabled nosuid option for /var/tmp mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/var/tmp\s' | grep -v nosuid
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.10 Ensure noexec option set on /var/tmp partition (Scored)
- name: 1.1.10 test enabled noexec option for /var/tmp mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/var/tmp\s' | grep -v noexec
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.11 Ensure separate partition exists for /var/log (Scored)
- name: 1.1.11 test separate mount point for /var/log
  ansible.builtin.shell:
    cmd: mount | grep /var/log
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length < 1
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.12 Ensure separate partition exists for /var/log/audit (Scored)
- name: 1.1.12 test separate mount point for /var/log/audit
  ansible.builtin.shell:
    cmd: mount | grep /var/log/audit
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length < 1
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.13 Ensure separate partition exists for /home (Scored)
- name: 1.1.13 test separate mount point for /home
  ansible.builtin.shell:
    cmd: mount | grep /home
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length < 1
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.14 Ensure nodev option set on /home partition (Scored)
- name: 1.1.14 test enabled nodev option for /home mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/home\s' | grep -v nodev
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.15 Ensure nodev option set on /dev/shm partition (Scored)
- name: 1.1.15 test enabled nodev option for /dev/shm mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/dev/shm\s' | grep -v nodev
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]

# 1.1.16 Ensure nosuid option set on /dev/shm partition (Scored)
- name: 1.1.16 test enabled nosuid option for /dev/shm mount point
  ansible.builtin.shell:
    cmd: mount | grep -E '\s/dev/shm\s' | grep -v nosuid
  register: out
  changed_when: no
  failed_when:
    - out.stdout_lines | length > 0
  when:
    - ansible_connection not in ["container", "docker", "community.docker.docker"]
